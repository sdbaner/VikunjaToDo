name: Deploy PostgreSQL with Migrations

on:
  push:
    branches:
      - main  # Trigger on main branch commits

jobs:
  build-and-push-migrations:
    name: Build & Push Migrations Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Migration Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/migrations:latest -f Dockerfile.migrations .
          docker push ${{ secrets.DOCKER_USERNAME }}/migrations:latest

  deploy-frontend-api-postgres:
    name: Deploy Helm chart with db migration
    runs-on: ubuntu-latest
    needs: build-and-push-migrations
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.31.0  # Use the required Kubernetes version

      - name: Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy Helmchart
        run: |
          helm upgrade --install vikunja ./eks/helm/
        continue-on-error: true  # Allow next steps to run even if this fails 

      - name: Check Migration Job Status
        run: |
          STATUS=$(kubectl get job custom-migrations -n vikunja -o jsonpath='{.status.succeeded}')
          if [[ "$STATUS" == "1" ]]; then
            echo "Migration Successful"
            echo "MIGRATION_STATUS=success" >> $GITHUB_ENV
          else
            echo "Migration Failed"
            echo "MIGRATION_STATUS=failure" >> $GITHUB_ENV
            exit 1  # Mark job as failed
          fi            


  rollback-on-failure:
    name: Rollback if Migrations Fail
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()
    steps:
      - name: Rollback Deployment
        run: |
          helm rollback vikunja 0 -n vikunja

      - name: Send Failure Email
        run: |
          echo "The migration job for 'vikunja' has failed, and a rollback has been triggered. Please check logs for more details."
  
  notify-success:
    name: Notify on Success
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Send Success Email
        run: |
          echo "Migration and Deployment Successful"
