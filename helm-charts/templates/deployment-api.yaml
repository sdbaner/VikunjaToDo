apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: api
    release: {{ .Release.Name }}
  name: {{ .Release.Name }}-api
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.replicas }}
  replicas: {{ .Values.replicas }}
  {{- else }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}-api
        image: "{{ .Values.image.repository }}/api:{{ .Values.image.tag }}"
        ports:
        - containerPort: 3456
          name: http
          protocol: TCP
        env:
        - name: VIKUNJA_DATABASE_HOST
          value: "{{ .Values.env.VIKUNJA_DATABASE_HOST }}"
        - name: VIKUNJA_DATABASE_USER
          value: "{{ .Values.env.VIKUNJA_DATABASE_USER }}"
        - name: VIKUNJA_DATABASE_NAME
          value: "{{ .Values.env.VIKUNJA_DATABASE_NAME }}"
        - name: VIKUNJA_API_URL
          value: "{{ .Values.env.VIKUNJA_API_URL }}"
        - name: VIKUNJA_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/info
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/v1/info
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/vikunja/config.yml
          name: config
          subPath: config.yml
        - mountPath: /data
          name: data
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-api-config
        name: config
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-api-data
